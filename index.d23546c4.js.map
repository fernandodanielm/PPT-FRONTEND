{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-baac8c26be93ccfc.js","frontend/index.ts","frontend/router.ts","frontend/pages/shortID/index.ts","frontend/state.ts","node_modules/@parcel/runtime-js/lib/runtime-db6e4fb49f9b57ee.js","node_modules/@parcel/runtime-js/lib/runtime-e59ff5dd742e6cf7.js","node_modules/@parcel/runtime-js/lib/runtime-4b71c8c834260f9f.js","node_modules/@parcel/runtime-js/lib/runtime-2d5ae1908dfdd5fe.js","frontend/pages/instructions/index.ts","frontend/pages/play/index.ts","frontend/pages/tu-nombre/index.ts","frontend/pages/result/index.ts","frontend/pages/welcome/index.ts","frontend/pages/ingresar-a-una-sala/index.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $ca4340f75ae9409a$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"h2yyf\\\",\\\"index.d23546c4.js\\\",\\\"28hUx\\\",\\\"piedrapapelotijera.a2838792.jpg\\\",\\\"80kxP\\\",\\\"piedra.2b6b2e59.png\\\",\\\"bS7qZ\\\",\\\"tijera.4b8c96df.png\\\",\\\"eEgVe\\\",\\\"papel.7c3d639f.png\\\"]\"));\n\nconst $abe438f9de09fed7$export$ca000e230c0caa3e = {\n    currentGame: {\n        data: {\n            player1Name: \"\",\n            player2Name: \"\",\n            player1Play: null,\n            player2Play: null,\n            statistics: {\n                player1: {\n                    wins: 0,\n                    losses: 0,\n                    draws: 0\n                },\n                player2: {\n                    wins: 0,\n                    losses: 0,\n                    draws: 0\n                }\n            },\n            gameOver: false,\n            readyForNextRound: false\n        },\n        shortId: null\n    },\n    listeners: [],\n    getState () {\n        return this;\n    },\n    setRoomId (roomId) {\n        this.data.roomId = roomId;\n    },\n    setState (newState) {\n        this.currentGame = newState.currentGame;\n        for (const cb of this.listeners)cb(newState); // Ejecuta cada función de los listeners\n    },\n    subscribe (callback) {\n        this.listeners.push(callback); // Añade la función al array de listeners\n    },\n    setPlayerName (name) {\n        const currentState = this.getState();\n        currentState.name = name;\n        this.setState(currentState);\n    },\n    async createRoom () {\n        const response = await fetch(\"https://ppt-backend-three.vercel.app/api/rooms\", {\n            method: \"POST\"\n        });\n        const data = await response.json();\n        const currentState = $abe438f9de09fed7$export$ca000e230c0caa3e.getState();\n        currentState.currentGame.shortId = data.roomId;\n        $abe438f9de09fed7$export$ca000e230c0caa3e.setState(currentState);\n        return data.roomId;\n    },\n    async joinRoom (roomId, playerName) {\n        const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${roomId}/join`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                playerName: playerName\n            })\n        });\n        const data = await response.json();\n        return data.playerNumber;\n    },\n    async setMove (roomId, playerNumber, move) {\n        await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${roomId}/move`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                playerNumber: playerNumber,\n                move: move\n            })\n        });\n    },\n    async resetGame () {\n        const currentState = this.getState();\n        const roomId = currentState.currentGame.shortId;\n        if (roomId) try {\n            const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${roomId}/reset`, {\n                method: \"PUT\"\n            });\n            if (!response.ok) throw new Error(`Error al reiniciar la sala: ${response.statusText}`);\n            // Restablecer los valores del estado local\n            currentState.currentGame.data = {\n                player1Name: \"\",\n                player2Name: \"\",\n                player1Play: null,\n                player2Play: null,\n                statistics: {\n                    player1: {\n                        wins: 0,\n                        losses: 0,\n                        draws: 0\n                    },\n                    player2: {\n                        wins: 0,\n                        losses: 0,\n                        draws: 0\n                    }\n                },\n                gameOver: false,\n                readyForNextRound: false\n            };\n            this.setState(currentState);\n        } catch (error) {\n            console.error(\"Error al reiniciar la sala:\", error);\n            // Mostrar un mensaje de error al usuario\n            alert(\"Hubo un error al reiniciar la sala. Int\\xe9ntalo de nuevo.\");\n        }\n    }\n};\n\n\nvar $9d6d8b031b90d431$exports = {};\n$9d6d8b031b90d431$exports = new URL(\"piedrapapelotijera.a2838792.jpg\", import.meta.url).toString();\n\n\nvar $2d5bedd08863dc7b$exports = {};\n$2d5bedd08863dc7b$exports = new URL(\"piedra.2b6b2e59.png\", import.meta.url).toString();\n\n\nvar $af7abf9125591478$exports = {};\n$af7abf9125591478$exports = new URL(\"tijera.4b8c96df.png\", import.meta.url).toString();\n\n\nvar $92c8478e4590eb86$exports = {};\n$92c8478e4590eb86$exports = new URL(\"papel.7c3d639f.png\", import.meta.url).toString();\n\n\nclass $a956b1c3d277d5bd$export$e37f6cf04f0d396a extends HTMLElement {\n    constructor(){\n        super(), this.roomId = null;\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    setRoomId(roomId) {\n        this.roomId = roomId;\n    }\n    async connectedCallback() {\n        // Obtener el roomId de la URL\n        const pathSegments = window.location.pathname.split('/');\n        this.roomId = pathSegments[pathSegments.length - 1] || null;\n        console.log(\"ShortId: roomId recibido:\", this.roomId);\n        if (!this.roomId) {\n            console.error(\"ShortId: roomId no encontrado en la URL.\");\n            window.goTo(\"/\");\n            return;\n        }\n        console.log(\"ShortId: roomId v\\xe1lido. Continuando con la espera de jugadores.\");\n        await this.waitForBothPlayers();\n        this.render();\n    }\n    async waitForBothPlayers() {\n        return new Promise((resolve)=>{\n            const intervalId = setInterval(async ()=>{\n                try {\n                    const currentState = (0, $abe438f9de09fed7$export$ca000e230c0caa3e).getState();\n                    const roomData = currentState.currentGame.data;\n                    const ownerName = roomData.player1Name;\n                    const guestName = roomData.player2Name;\n                    console.log(\"ShortId: Esperando jugadores. Owner:\", ownerName, \"Guest:\", guestName);\n                    if (ownerName && guestName) {\n                        clearInterval(intervalId);\n                        console.log(\"ShortId: Ambos jugadores listos.\");\n                        resolve(true);\n                        // Redirigir a Instructions después de unos segundos\n                        setTimeout(()=>{\n                            window.goTo(\"/instructions\");\n                        }, 2000); // 2 segundos de espera\n                    }\n                } catch (error) {\n                    console.error(\"Error en waitForBothPlayers:\", error);\n                }\n            }, 1000);\n        });\n    }\n    render() {\n        if (this.shadow) {\n            const currentState = (0, $abe438f9de09fed7$export$ca000e230c0caa3e).getState();\n            const roomId = this.roomId || currentState.currentGame.shortId; // Obtener el roomId del estado o de la URL\n            const ownerName = currentState.currentGame.data.player1Name;\n            const guestName = currentState.currentGame.data.player2Name;\n            console.log(\"ShortId: Renderizando con roomId:\", roomId);\n            console.log(\"ShortId: Owner:\", ownerName, \"Guest:\", guestName);\n            // Actualizar la interfaz gráfica con el nombre del guest\n            const guestDisplayName = guestName ? guestName : \"Contrincante en espera...\";\n            this.shadow.innerHTML = `\n                <div class=\"short-id-container\">\n                    <div class=\"header\">\n                        <div class=\"players\">\n                            <p>${ownerName || \"Esperando...\"}</p>\n                            <p>${guestDisplayName}</p>\n                        </div>\n                        <div class=\"room-info\">\n                            <p>Sala</p>\n                            <p>${roomId}</p>\n                        </div>\n                    </div>\n                    <div class=\"share-code\">Compart\\xed el c\\xf3digo:</div>\n                    <div class=\"room-id\">${roomId}</div>\n                    <div class=\"share-with\">Con tu contrincante</div>\n                    <div class=\"moves\">\n                        <img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($2d5bedd08863dc7b$exports))}\" alt=\"Piedra\">\n                        <img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($92c8478e4590eb86$exports))}\" alt=\"Papel\">\n                        <img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($af7abf9125591478$exports))}\" alt=\"Tijera\">\n                    </div>\n                </div>\n            `;\n            const style = document.createElement(\"style\");\n            style.textContent = `\n                .short-id-container {\n                    background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                    background-size: cover;\n                    height: 100vh;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                    padding: 20px;\n                    text-align: center;\n                    font-family: 'Arial Rounded MT Bold', sans-serif;\n                }\n\n                .header {\n                    display: flex;\n                    justify-content: space-between;\n                    width: 100%;\n                    margin-bottom: 20px;\n                }\n\n                .players, .room-info {\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                }\n\n                .share-code {\n                    font-size: 24px;\n                    margin-bottom: 10px;\n                    color: #333;\n                }\n\n                .room-id {\n                    font-size: 36px;\n                    margin-bottom: 10px;\n                    color: #007bff;\n                }\n\n                .share-with {\n                    font-size: 18px;\n                    margin-bottom: 30px;\n                    color: #333;\n                }\n\n                .moves {\n                    display: flex;\n                    justify-content: center;\n                    margin-top: 30px;\n                }\n\n                .moves img {\n                    width: 80px;\n                    height: 80px;\n                    margin: 0 10px;\n                }\n\n                @media (min-width: 768px) {\n                    .moves img {\n                        width: 120px;\n                        height: 120px;\n                    }\n                }\n            `;\n            this.shadow.appendChild(style);\n        }\n    }\n}\ncustomElements.define('short-id', $a956b1c3d277d5bd$export$e37f6cf04f0d396a);\n\n\n\n\nclass $63de42a99e12e9d4$export$34553d2d18504c80 extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        const currentState = (0, $abe438f9de09fed7$export$ca000e230c0caa3e).getState();\n        const roomId = currentState.currentGame.shortId;\n        if (!roomId) {\n            window.goTo(\"/\");\n            return;\n        }\n        this.render();\n    }\n    render() {\n        if (this.shadow) {\n            this.shadow.innerHTML = `\n                <div class=\"instructions-container\">\n                    <h3>Presion\\xe1 jugar y eleg\\xed: piedra, papel o tijera antes de que pasen los 3 segundos.</h3>\n                    <button class=\"button\" id=\"play-button\">Jugar</button>\n                </div>\n            `;\n            const playButton = this.shadow.querySelector('#play-button');\n            if (playButton) playButton.addEventListener('click', ()=>{\n                window.goTo('/play');\n            });\n            const style = document.createElement(\"style\");\n            style.textContent = `\n                @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\n\n                .instructions-container {\n                    background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                    background-size: cover;\n                    height: 100vh;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                    padding: 20px;\n                    text-align: center;\n                    font-family: 'Odibee Sans', cursive;\n                }\n\n                h3 {\n                    font-size: 32px;\n                    margin-bottom: 30px;\n                    color: #333;\n                    padding: 0 20px;\n                }\n\n                .button {\n                    width: 322px;\n                    height: 87px;\n                    border: none;\n                    background-color: #2979FF;\n                    color: white;\n                    font-size: 24px;\n                    margin-top: 20px;\n                    border-radius: 6px;\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                    text-transform: uppercase;\n                    letter-spacing: 2px;\n                    font-weight: bold;\n                    border: 15px solid #1976D2;\n                    font-family: 'Odibee Sans', cursive;\n                }\n\n                .button:hover {\n                    background-color: #0056b3;\n                }\n\n                @media (min-width: 768px) {\n                    .instructions-container {\n                        padding: 40px;\n                    }\n\n                    h3 {\n                        font-size: 48px;\n                    }\n\n                    .button {\n                        width: 400px;\n                        height: 100px;\n                        font-size: 32px;\n                    }\n                }\n            `;\n            this.shadow.appendChild(style);\n        }\n    }\n}\ncustomElements.define('instructions-page', $63de42a99e12e9d4$export$34553d2d18504c80);\n\n\n\n\n\n\n\nclass $759aea41f4359c5b$export$f3065aba99394728 extends HTMLElement {\n    constructor(){\n        super(), this.roomId = null, this.playerNumber = 1;\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    async connectedCallback() {\n        const currentState = (0, $abe438f9de09fed7$export$ca000e230c0caa3e).getState();\n        this.roomId = currentState.currentGame.shortId;\n        const player1Name = currentState.currentGame.data.player1Name;\n        const player2Name = currentState.currentGame.data.player2Name;\n        if (player1Name) this.playerNumber = player2Name ? 2 : 1;\n        if (!this.roomId) {\n            window.goTo(\"/\");\n            return;\n        }\n        this.render();\n        await this.waitForGameResult();\n    }\n    async waitForGameResult() {\n        return new Promise((resolve)=>{\n            (0, $abe438f9de09fed7$export$ca000e230c0caa3e).subscribe(async (currentState)=>{\n                if (currentState.currentGame.data.gameOver) {\n                    resolve(true);\n                    window.goTo(\"/result\");\n                }\n            });\n        });\n    }\n    render() {\n        const shadowRoot = this.shadow;\n        if (shadowRoot) {\n            shadowRoot.innerHTML = `\n                <div class=\"play-container\">\n                    <h1>Elige tu jugada</h1>\n                    <div class=\"timer\">\n                        <span id=\"timer\">3</span>\n                    </div>\n                    <div class=\"moves\">\n                        <button id=\"piedra\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($2d5bedd08863dc7b$exports))}\" alt=\"Piedra\"></button>\n                        <button id=\"papel\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($92c8478e4590eb86$exports))}\" alt=\"Papel\"></button>\n                        <button id=\"tijera\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($af7abf9125591478$exports))}\" alt=\"Tijera\"></button>\n                    </div>\n                </div>\n            `;\n            const moves = shadowRoot.querySelector(\".moves\");\n            const timerElement = shadowRoot.querySelector(\"#timer\");\n            const timerContainer = shadowRoot.querySelector(\".timer\");\n            let timeLeft = 3;\n            timerContainer.style.animation = `countdown ${timeLeft}s linear forwards`;\n            const timerInterval = setInterval(()=>{\n                timeLeft--;\n                if (timerElement) timerElement.textContent = timeLeft.toString();\n                if (timeLeft === 0) {\n                    clearInterval(timerInterval);\n                    if (moves) moves.style.display = 'none';\n                }\n            }, 1000);\n            moves?.addEventListener(\"click\", async (e)=>{\n                const target = e.target.closest('button');\n                if (target) {\n                    clearInterval(timerInterval);\n                    const buttons = shadowRoot.querySelectorAll(\".moves button\");\n                    buttons.forEach((button)=>{\n                        const img = button.querySelector('img');\n                        if (button === target) img?.classList.add('selected');\n                        else img?.classList.add('unselected');\n                    });\n                    const myMove = target.id;\n                    if (this.roomId) await (0, $abe438f9de09fed7$export$ca000e230c0caa3e).setMove(this.roomId, this.playerNumber, myMove);\n                    else console.error(\"roomId es null. No se puede realizar el movimiento.\");\n                }\n            });\n            const style = document.createElement(\"style\");\n            style.textContent = `\n                .play-container {\n                    background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                    background-size: cover;\n                    height: 100vh;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                    padding: 20px;\n                    text-align: center;\n                }\n\n                h1 {\n                    font-size: 36px;\n                    margin-bottom: 30px;\n                    color: #333;\n                }\n\n                .timer {\n                    font-size: 48px;\n                    margin-bottom: 30px;\n                    color: #333;\n                    position: relative;\n                    width: 100px;\n                    height: 100px;\n                    border-radius: 50%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    border: 5px solid #333;\n                }\n\n                .timer::before {\n                    content: \"\";\n                    position: absolute;\n                    top: -5px;\n                    left: -5px;\n                    right: -5px;\n                    bottom: -5px;\n                    border-radius: 50%;\n                    border: 5px solid transparent;\n                    border-top-color: #333;\n                    animation: spin 3s linear infinite;\n                }\n\n                @keyframes spin {\n                    0% {\n                        transform: rotate(0deg);\n                    }\n                    100% {\n                        transform: rotate(360deg);\n                    }\n                }\n\n                @keyframes countdown {\n                    0% {\n                        stroke-dasharray: 283;\n                        stroke-dashoffset: 0;\n                    }\n                    100% {\n                        stroke-dasharray: 283;\n                        stroke-dashoffset: 283;\n                    }\n                }\n\n                .moves {\n                    display: flex;\n                    justify-content: center;\n                }\n\n                .moves button {\n                    background: none;\n                    border: none;\n                    padding: 10px;\n                    margin: 0 10px;\n                    cursor: pointer;\n                }\n\n                .moves img {\n                    width: 100px;\n                    height: 100px;\n                    transition: transform 0.3s ease;\n                }\n\n                .moves img.selected {\n                    transform: scale(1.2);\n                }\n\n                .moves img.unselected {\n                    opacity: 0.5;\n                }\n\n                @media (min-width: 768px) {\n                    h1 {\n                        font-size: 48px;\n                    }\n\n                    .moves img {\n                        width: 150px;\n                        height: 150px;\n                    }\n                }\n            `;\n            shadowRoot.appendChild(style);\n        }\n    }\n}\ncustomElements.define('play-page', $759aea41f4359c5b$export$f3065aba99394728);\n\n\n\n\nclass $94290132cdeb5e8a$export$ae14a01bd659aaa1 extends HTMLElement {\n    constructor(){\n        super(), this.roomId = null;\n        this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.roomId = (0, $abe438f9de09fed7$export$ca000e230c0caa3e).getState().currentGame.shortId; // Obtener el roomId del estado\n        this.render();\n    }\n    render() {\n        if (!this.shadowRoot) return; // Salir si shadowRoot es null\n        this.shadowRoot.innerHTML = `\n            <div class=\"tu-nombre-container\">\n                <h2>Ingresa tu nombre</h2>\n                <form class=\"nombre-form\">\n                    <input type=\"text\" name=\"nombre\" placeholder=\"Tu nombre\">\n                    <button class=\"button\" type=\"submit\">Unirse a la sala</button>\n                </form>\n            </div>\n        `;\n        const form = this.shadowRoot.querySelector(\".nombre-form\");\n        form.addEventListener(\"submit\", async (e)=>{\n            e.preventDefault();\n            const nombre = form.nombre.value;\n            if (this.roomId) try {\n                const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${this.roomId}/join`, {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        playerName: nombre\n                    })\n                });\n                if (!response.ok) {\n                    console.error(\"Error al unirse a la sala:\", response.statusText);\n                    alert(\"Hubo un error al unirse a la sala. Int\\xe9ntalo de nuevo.\");\n                    return; // Detener la ejecución si hay un error\n                }\n                const data = await response.json();\n                const playerNumber = data.playerNumber;\n                (0, $abe438f9de09fed7$export$ca000e230c0caa3e).setPlayerName(nombre);\n                if (playerNumber === 1) window.goTo(`/short-id/${this.roomId}`);\n                else window.goTo(\"/instructions\");\n            } catch (error) {\n                console.error(\"Error al unirse a la sala:\", error);\n                alert(\"Hubo un error al unirse a la sala. Int\\xe9ntalo de nuevo.\");\n            }\n        });\n        const style = document.createElement(\"style\");\n        style.textContent = `\n            @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\n\n            .tu-nombre-container {\n                background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                background-size: cover;\n                height: 100vh;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                padding: 20px;\n                text-align: center;\n                font-family: 'Odibee Sans', cursive;\n            }\n\n            h2 {\n                font-size: 36px;\n                margin-bottom: 30px;\n                color: #333;\n            }\n\n            .nombre-form {\n                display: flex;\n                flex-direction: column;\n                width: 80%;\n                max-width: 400px;\n            }\n\n            input[type=\"text\"] {\n                padding: 15px;\n                margin-bottom: 20px;\n                border: 1px solid #ccc;\n                border-radius: 5px;\n                font-size: 16px;\n            }\n\n            .button {\n                width: 322px;\n                height: 87px;\n                border: none;\n                background-color: #2979FF;\n                color: white;\n                font-size: 24px;\n                margin-top: 20px;\n                border-radius: 6px;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                text-transform: uppercase;\n                letter-spacing: 2px;\n                font-weight: bold;\n                border: 15px solid #1976D2;\n                font-family: 'Odibee Sans', cursive;\n            }\n\n            .button:hover {\n                background-color: #0056b3;\n            }\n\n            @media (min-width: 768px) {\n                h2 {\n                    font-size: 48px;\n                }\n\n                .nombre-form {\n                    width: 60%;\n                }\n\n                input[type=\"text\"] {\n                    font-size: 20px;\n                }\n\n                .button {\n                    width: 400px;\n                    height: 100px;\n                    font-size: 32px;\n                }\n            }\n        `;\n        this.shadowRoot.appendChild(style);\n    }\n}\ncustomElements.define(\"tu-nombre\", $94290132cdeb5e8a$export$ae14a01bd659aaa1);\n\n\n\n\nclass $ed5792c26601d641$export$2b06c2bd596f1e13 extends HTMLElement {\n    constructor(){\n        super(), this.roomId = null;\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    setRoomId(roomId) {\n        this.roomId = roomId;\n    }\n    async connectedCallback() {\n        if (!this.roomId) {\n            const currentState = (0, $abe438f9de09fed7$export$ca000e230c0caa3e).getState();\n            this.roomId = currentState.currentGame.shortId;\n        }\n        if (!this.roomId) {\n            window.goTo(\"/\");\n            return;\n        }\n        const gameResult = await this.getGameResult();\n        this.render(gameResult);\n    }\n    async getGameResult() {\n        try {\n            const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${this.roomId}`);\n            if (!response.ok) throw new Error(`Error al obtener los resultados del juego: ${response.statusText}`);\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            console.error(\"Error al obtener los resultados del juego:\", error);\n            alert(\"Hubo un error al obtener los resultados del juego. Int\\xe9ntalo de nuevo.\");\n            return null;\n        }\n    }\n    render(gameResult) {\n        const shadowRoot = this.shadow;\n        if (!gameResult) return;\n        const { player1Name: player1Name, player2Name: player2Name, player1Play: player1Play, player2Play: player2Play, statistics: statistics } = gameResult;\n        let message = \"Es un empate.\";\n        let starColor = \"yellow\";\n        if (player1Play === player2Play) {\n            message = \"Es un empate.\";\n            starColor = \"yellow\";\n        } else if (player1Play === \"piedra\" && player2Play === \"tijera\" || player1Play === \"tijera\" && player2Play === \"papel\" || player1Play === \"papel\" && player2Play === \"piedra\") {\n            message = \"\\xa1Ganaste!\";\n            starColor = \"green\";\n        } else {\n            message = \"Perdiste.\";\n            starColor = \"red\";\n        }\n        if (shadowRoot) {\n            shadowRoot.innerHTML = `\n                <div class=\"result-container\">\n                    <div class=\"star\"></div>\n                    <h1>${message}</h1>\n                    <h2>Resultados</h2>\n                    <p>${player1Name} jug\\xf3: ${player1Play}</p>\n                    <p>${player2Name} jug\\xf3: ${player2Play}</p>\n                    <p>Victorias de ${player1Name}: ${statistics[player1Name].wins}</p>\n                    <p>Derrotas de ${player1Name}: ${statistics[player1Name].losses}</p>\n                    <p>Empates de ${player1Name}: ${statistics[player1Name].draws}</p>\n                    <p>Victorias de ${player2Name}: ${statistics[player2Name].wins}</p>\n                    <p>Derrotas de ${player2Name}: ${statistics[player2Name].losses}</p>\n                    <p>Empates de ${player2Name}: ${statistics[player2Name].draws}</p>\n                    <button class=\"button\" id=\"play-again-button\">Volver a jugar</button>\n                </div>\n            `;\n            const playAgainButton = shadowRoot.querySelector(\"#play-again-button\");\n            if (playAgainButton) playAgainButton.addEventListener(\"click\", ()=>{\n                (0, $abe438f9de09fed7$export$ca000e230c0caa3e).resetGame();\n                window.goTo(\"/play\");\n            });\n            const style = document.createElement(\"style\");\n            style.textContent = `\n                @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\n\n                .result-container {\n                    background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                    background-size: cover;\n                    height: 100vh;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                    padding: 20px;\n                    text-align: center;\n                    font-family: 'Odibee Sans', cursive;\n                }\n\n                h1 {\n                    font-size: 48px;\n                    margin-bottom: 20px;\n                    color: #333;\n                }\n\n                h2 {\n                    font-size: 36px;\n                    margin-bottom: 30px;\n                    color: #333;\n                }\n\n                p {\n                    font-size: 24px;\n                    margin-bottom: 10px;\n                    color: #333;\n                }\n\n                .button {\n                    width: 322px;\n                    height: 87px;\n                    border: none;\n                    background-color: #2979FF;\n                    color: white;\n                    font-size: 24px;\n                    margin-top: 20px;\n                    border-radius: 6px;\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                    text-transform: uppercase;\n                    letter-spacing: 2px;\n                    font-weight: bold;\n                    border: 15px solid #1976D2;\n                    font-family: 'Odibee Sans', cursive;\n                }\n\n                .button:hover {\n                    background-color: #0056b3;\n                }\n\n                @media (min-width: 768px) {\n                    .result-container {\n                        padding: 40px;\n                    }\n\n                    h1 {\n                        font-size: 64px;\n                    }\n\n                    h2 {\n                        font-size: 48px;\n                    }\n\n                    p {\n                        font-size: 32px;\n                    }\n\n                    .button {\n                        width: 400px;\n                        height: 100px;\n                        font-size: 32px;\n                    }\n                }\n            `;\n            shadowRoot.appendChild(style);\n        }\n    }\n}\ncustomElements.define(\"result-page\", $ed5792c26601d641$export$2b06c2bd596f1e13);\n\n\n\n\nclass $4777be50762f4b0a$export$23191e4434a9e834 extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        if (this.shadow) {\n            this.shadow.innerHTML = `\n                <style>\n                    body {\n                        background-color: white;\n                    }\n                    .welcome-container {\n                        width: 375px;\n                        height: 667px;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                        background-size: cover;\n                        background-repeat: no-repeat;\n                    }\n                    .title-container {\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        padding: 20px;\n                    }\n                    h1 {\n                        font-size: 36px;\n                        text-align: center;\n                        background: linear-gradient(to right, green, lightgreen);\n                        -webkit-background-clip: text;\n                        -webkit-text-fill-color: transparent;\n                        font-family: 'Arial Rounded MT Bold', sans-serif;\n                    }\n                    .button {\n                        width: 322px;\n                        height: 87px;\n                        border: none;\n                        background-color: #2979FF;\n                        color: white;\n                        font-size: 24px;\n                        margin-top: 20px;\n                        border-radius: 6px;\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                        text-transform: uppercase;\n                        letter-spacing: 2px;\n                        font-weight: bold;\n                        border: 15px solid #1976D2;\n                    }\n                    @media (min-width: 965px) {\n                        .welcome-container {\n                            width: 1280px;\n                            height: 720px;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                        }\n                    }\n                </style>\n                <div class=\"welcome-container\">\n                    <div class=\"title-container\">\n                        <h1>Piedra</h1>\n                        <h1>Papel \\xf3</h1>\n                        <h1>Tijera</h1>\n                    </div>\n                    <button class=\"button\" id=\"new-game-button\">Nuevo Juego</button>\n                    <button class=\"button\" id=\"join-room-button\">Ingresa a una sala</button>\n                </div>\n            `;\n            const newGameButton = this.shadow.querySelector('#new-game-button');\n            const joinRoomButton = this.shadow.querySelector('#join-room-button');\n            if (newGameButton) newGameButton.addEventListener('click', async ()=>{\n                const roomId = await (0, $abe438f9de09fed7$export$ca000e230c0caa3e).createRoom();\n                window.goTo(`/rooms/${roomId}/join`); // Corrección aquí\n            });\n            if (joinRoomButton) joinRoomButton.addEventListener('click', ()=>{\n                window.goTo('/ingresar-a-sala');\n            });\n        }\n    }\n}\ncustomElements.define('welcome-page', $4777be50762f4b0a$export$23191e4434a9e834);\n\n\n\n\nclass $9b0f76e966c00c55$export$df21316eba5ea45e extends HTMLElement {\n    constructor(){\n        super();\n        this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        this.shadowRoot.innerHTML = `\n            <div class=\"ingresar-asala-container\">\n                <h2>Ingresa el c\\xf3digo de la sala</h2>\n                <form class=\"sala-form\">\n                    <input type=\"text\" name=\"roomId\" placeholder=\"C\\xf3digo de la sala\">\n                    <button class=\"button\" type=\"submit\">Ingresar</button>\n                </form>\n            </div>\n        `;\n        const form = this.shadowRoot.querySelector(\".sala-form\");\n        this.roomIdInput = this.shadowRoot.querySelector(\"input[name='roomId']\");\n        form.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            this.ingresarASala();\n        });\n        const style = document.createElement(\"style\");\n        style.textContent = `\n            @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\n\n            .ingresar-asala-container {\n                background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($9d6d8b031b90d431$exports))});\n                background-size: cover;\n                height: 100vh;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                padding: 20px;\n                text-align: center;\n                font-family: 'Odibee Sans', cursive;\n            }\n\n            h2 {\n                font-size: 36px;\n                margin-bottom: 30px;\n                color: #333;\n            }\n\n            .sala-form {\n                display: flex;\n                flex-direction: column;\n                width: 80%;\n                max-width: 400px;\n            }\n\n            input[type=\"text\"] {\n                padding: 15px;\n                margin-bottom: 20px;\n                border: 1px solid #ccc;\n                border-radius: 5px;\n                font-size: 16px;\n            }\n\n            .button {\n                width: 322px;\n                height: 87px;\n                border: none;\n                background-color: #2979FF;\n                color: white;\n                font-size: 24px;\n                margin-top: 20px;\n                border-radius: 6px;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                text-transform: uppercase;\n                letter-spacing: 2px;\n                font-weight: bold;\n                border: 15px solid #1976D2;\n                font-family: 'Odibee Sans', cursive;\n            }\n\n            .button:hover {\n                background-color: #0056b3;\n            }\n\n            @media (min-width: 768px) {\n                h2 {\n                    font-size: 48px;\n                }\n\n                .sala-form {\n                    width: 60%;\n                }\n\n                input[type=\"text\"] {\n                    font-size: 20px;\n                }\n\n                .button {\n                    width: 400px;\n                    height: 100px;\n                    font-size: 32px;\n                }\n            }\n        `;\n        this.shadowRoot.appendChild(style);\n    }\n    ingresarASala() {\n        const roomId = this.roomIdInput.value;\n        (0, $abe438f9de09fed7$export$ca000e230c0caa3e).setRoomId(roomId); // Almacenar el roomId en el estado\n        window.goTo('/ingresar-nombre');\n    }\n}\ncustomElements.define(\"ingresar-asala\", $9b0f76e966c00c55$export$df21316eba5ea45e);\n\n\n// Función para extraer el roomId de la URL\nfunction $10c9776e944038dd$var$extractRoomId(path) {\n    const match = /^\\/short-id\\/(\\d+)$/.exec(path);\n    return match ? match[1] : null;\n}\nconst $10c9776e944038dd$var$routes = [\n    {\n        pathRegex: /^\\/$/,\n        render: ()=>new (0, $4777be50762f4b0a$export$23191e4434a9e834)()\n    },\n    {\n        pathRegex: /^\\/instructions$/,\n        render: ()=>new (0, $63de42a99e12e9d4$export$34553d2d18504c80)()\n    },\n    {\n        pathRegex: /^\\/play$/,\n        render: ()=>new (0, $759aea41f4359c5b$export$f3065aba99394728)()\n    },\n    {\n        pathRegex: /^\\/result$/,\n        render: ()=>new (0, $ed5792c26601d641$export$2b06c2bd596f1e13)()\n    },\n    {\n        pathRegex: /^\\/tu-nombre$/,\n        render: ()=>new (0, $94290132cdeb5e8a$export$ae14a01bd659aaa1)()\n    },\n    {\n        pathRegex: /^\\/ingresar-a-sala$/,\n        render: ()=>new (0, $9b0f76e966c00c55$export$df21316eba5ea45e)()\n    },\n    {\n        pathRegex: /^\\/short-id\\/(\\d+)$/,\n        render: (params)=>{\n            const roomId = params && params[1];\n            if (!roomId) {\n                console.error(\"roomId no encontrado en la URL.\");\n                return new (0, $4777be50762f4b0a$export$23191e4434a9e834)(); // Volver a la página principal si no hay roomId.\n            }\n            const shortIdPage = new (0, $a956b1c3d277d5bd$export$e37f6cf04f0d396a)();\n            shortIdPage.setRoomId(roomId);\n            return shortIdPage;\n        }\n    },\n    {\n        pathRegex: /^\\/rooms\\/(\\d+)\\/join$/,\n        render: async (params)=>{\n            const roomId = params[1];\n            // No es necesario llamar a setRoomId en TuNombre\n            return new (0, $94290132cdeb5e8a$export$ae14a01bd659aaa1)();\n        }\n    }\n];\nfunction $10c9776e944038dd$var$goTo(path, params) {\n    window.history.pushState({}, \"\", path);\n    $10c9776e944038dd$var$renderPath(path, params);\n}\nwindow.goTo = $10c9776e944038dd$var$goTo;\nasync function $10c9776e944038dd$var$renderPath(path, params) {\n    const route = $10c9776e944038dd$var$routes.find((route)=>route.pathRegex.test(path)); // Corrección: routes.find (usar find en el array)\n    if (route) {\n        const app = document.getElementById(\"app\");\n        if (app) {\n            app.innerHTML = \"\";\n            const rendered = route.render(route.pathRegex.exec(path));\n            if (rendered instanceof Promise) app.appendChild(await rendered);\n            else app.appendChild(rendered);\n        }\n    } else {\n        console.warn(`El path '${path}' no fue encontrado.`);\n        $10c9776e944038dd$var$goTo('/'); // Redirigir a la página principal si la ruta no existe.\n    }\n}\nfunction $10c9776e944038dd$var$getCleanPathFromURL() {\n    const fullPath = window.location.pathname;\n    const basePath = '/PPT-FRONTEND';\n    if (fullPath.startsWith(basePath)) return fullPath.replace(basePath, '') || '/';\n    return fullPath;\n}\nfunction $10c9776e944038dd$export$cf7ee87ede64229c() {\n    const initialPath = $10c9776e944038dd$var$getCleanPathFromURL();\n    $10c9776e944038dd$var$renderPath(initialPath);\n}\n\n\n(0, $10c9776e944038dd$export$cf7ee87ede64229c)();\n\n\n//# sourceMappingURL=index.d23546c4.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"h2yyf\\\",\\\"index.d23546c4.js\\\",\\\"28hUx\\\",\\\"piedrapapelotijera.a2838792.jpg\\\",\\\"80kxP\\\",\\\"piedra.2b6b2e59.png\\\",\\\"bS7qZ\\\",\\\"tijera.4b8c96df.png\\\",\\\"eEgVe\\\",\\\"papel.7c3d639f.png\\\"]\"));","import { state } from \"./state\";\r\nimport { initRouter } from \"./router\";\r\nimport { Welcome } from \"./pages/welcome\";\r\nimport { TuNombre } from \"./pages/tu-nombre\";\r\nimport { ShortId } from \"./pages/shortID\";\r\nimport { ResultPage } from \"./pages/result\";\r\nimport { PlayPage } from \"./pages/play\";\r\nimport { InstructionsPage } from \"./pages/instructions\";\r\nimport { IngresarAsala } from \"./pages/ingresar-a-una-sala\";\r\n\r\n\r\ninitRouter();","import { ShortId } from \"./pages/shortID\";\r\nimport { InstructionsPage } from \"./pages/instructions\";\r\nimport { PlayPage } from \"./pages/play\";\r\nimport { TuNombre } from \"./pages/tu-nombre\";\r\nimport { ResultPage } from \"./pages/result\";\r\nimport { Welcome } from \"./pages/welcome\";\r\nimport { IngresarAsala } from \"./pages/ingresar-a-una-sala\";\r\n\r\ninterface RouterPath {\r\n    pathRegex: RegExp;\r\n    render: (params?: any) => HTMLElement | Promise<HTMLElement>;\r\n}\r\n\r\n// Función para extraer el roomId de la URL\r\nfunction extractRoomId(path: string): string | null {\r\n    const match = /^\\/short-id\\/(\\d+)$/.exec(path);\r\n    return match ? match[1] : null;\r\n}\r\n\r\nconst routes: RouterPath[] = [ // Corrección: RouterPath[] (array de RouterPath)\r\n    {\r\n        pathRegex: /^\\/$/,\r\n        render: () => new Welcome(),\r\n    },\r\n    {\r\n        pathRegex: /^\\/instructions$/,\r\n        render: () => new InstructionsPage(),\r\n    },\r\n    {\r\n        pathRegex: /^\\/play$/,\r\n        render: () => new PlayPage(),\r\n    },\r\n    {\r\n        pathRegex: /^\\/result$/,\r\n        render: () => new ResultPage(),\r\n    },\r\n    {\r\n        pathRegex: /^\\/tu-nombre$/,\r\n        render: () => new TuNombre(),\r\n    },\r\n    {\r\n        pathRegex: /^\\/ingresar-a-sala$/,\r\n        render: () => new IngresarAsala(),\r\n    },\r\n    {\r\n        pathRegex: /^\\/short-id\\/(\\d+)$/, // Ruta con roomId\r\n        render: (params) => {\r\n            const roomId = params && params[1];\r\n            if (!roomId) {\r\n                console.error(\"roomId no encontrado en la URL.\");\r\n                return new Welcome(); // Volver a la página principal si no hay roomId.\r\n            }\r\n\r\n            const shortIdPage = new ShortId();\r\n            shortIdPage.setRoomId(roomId);\r\n            return shortIdPage;\r\n        },\r\n    },\r\n    {\r\n        pathRegex: /^\\/rooms\\/(\\d+)\\/join$/,\r\n        render: async (params) => {\r\n            const roomId = params[1];\r\n            // No es necesario llamar a setRoomId en TuNombre\r\n            return new TuNombre();\r\n        },\r\n    },\r\n];\r\n\r\nfunction goTo(path: string, params?: any) {\r\n    window.history.pushState({}, \"\", path);\r\n    renderPath(path, params);\r\n}\r\n\r\n(window as any).goTo = goTo;\r\n\r\nasync function renderPath(path: string, params?: any): Promise<void> {\r\n    const route = routes.find((route) => route.pathRegex.test(path)); // Corrección: routes.find (usar find en el array)\r\n\r\n    if (route) {\r\n        const app = document.getElementById(\"app\");\r\n        if (app) {\r\n            app.innerHTML = \"\";\r\n            const rendered = route.render(route.pathRegex.exec(path));\r\n            if (rendered instanceof Promise) {\r\n                app.appendChild(await rendered);\r\n            } else {\r\n                app.appendChild(rendered);\r\n            }\r\n        }\r\n    } else {\r\n        console.warn(`El path '${path}' no fue encontrado.`);\r\n        goTo('/'); // Redirigir a la página principal si la ruta no existe.\r\n    }\r\n}\r\n\r\nfunction getCleanPathFromURL() {\r\n    const fullPath = window.location.pathname;\r\n    const basePath = '/PPT-FRONTEND';\r\n    if (fullPath.startsWith(basePath)) {\r\n        return fullPath.replace(basePath, '') || '/';\r\n    }\r\n    return fullPath;\r\n}\r\n\r\nexport function initRouter(): void {\r\n    const initialPath = getCleanPathFromURL();\r\n    renderPath(initialPath);\r\n}","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\nimport piedraImage from \"../../assets/piedra.png\";\r\nimport tijeraImage from \"../../assets/tijera.png\";\r\nimport papelImage from \"../../assets/papel.png\";\r\n\r\nexport class ShortId extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    roomId: string | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n\r\n    setRoomId(roomId: string) {\r\n        this.roomId = roomId;\r\n    }\r\n\r\n    async connectedCallback() {\r\n        // Obtener el roomId de la URL\r\n        const pathSegments = window.location.pathname.split('/');\r\n        this.roomId = pathSegments[pathSegments.length - 1] || null;\r\n\r\n        console.log(\"ShortId: roomId recibido:\", this.roomId);\r\n\r\n        if (!this.roomId) {\r\n            console.error(\"ShortId: roomId no encontrado en la URL.\");\r\n            (window as any).goTo(\"/\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"ShortId: roomId válido. Continuando con la espera de jugadores.\");\r\n\r\n        await this.waitForBothPlayers();\r\n        this.render();\r\n    }\r\n\r\n    async waitForBothPlayers() {\r\n        return new Promise((resolve) => {\r\n            const intervalId = setInterval(async () => {\r\n                try {\r\n                    const currentState = state.getState();\r\n                    const roomData = currentState.currentGame.data;\r\n                    const ownerName = roomData.player1Name;\r\n                    const guestName = roomData.player2Name;\r\n\r\n                    console.log(\"ShortId: Esperando jugadores. Owner:\", ownerName, \"Guest:\", guestName);\r\n\r\n                    if (ownerName && guestName) {\r\n                        clearInterval(intervalId);\r\n                        console.log(\"ShortId: Ambos jugadores listos.\");\r\n                        resolve(true);\r\n                        // Redirigir a Instructions después de unos segundos\r\n                        setTimeout(() => {\r\n                            (window as any).goTo(\"/instructions\");\r\n                        }, 2000); // 2 segundos de espera\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error en waitForBothPlayers:\", error);\r\n                }\r\n            }, 1000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.shadow) {\r\n            const currentState = state.getState();\r\n            const roomId = this.roomId || currentState.currentGame.shortId; // Obtener el roomId del estado o de la URL\r\n            const ownerName = currentState.currentGame.data.player1Name;\r\n            const guestName = currentState.currentGame.data.player2Name;\r\n\r\n            console.log(\"ShortId: Renderizando con roomId:\", roomId);\r\n            console.log(\"ShortId: Owner:\", ownerName, \"Guest:\", guestName);\r\n\r\n            // Actualizar la interfaz gráfica con el nombre del guest\r\n            const guestDisplayName = guestName ? guestName : \"Contrincante en espera...\";\r\n\r\n            this.shadow.innerHTML = `\r\n                <div class=\"short-id-container\">\r\n                    <div class=\"header\">\r\n                        <div class=\"players\">\r\n                            <p>${ownerName || \"Esperando...\"}</p>\r\n                            <p>${guestDisplayName}</p>\r\n                        </div>\r\n                        <div class=\"room-info\">\r\n                            <p>Sala</p>\r\n                            <p>${roomId}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"share-code\">Compartí el código:</div>\r\n                    <div class=\"room-id\">${roomId}</div>\r\n                    <div class=\"share-with\">Con tu contrincante</div>\r\n                    <div class=\"moves\">\r\n                        <img src=\"${piedraImage}\" alt=\"Piedra\">\r\n                        <img src=\"${papelImage}\" alt=\"Papel\">\r\n                        <img src=\"${tijeraImage}\" alt=\"Tijera\">\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            const style = document.createElement(\"style\");\r\n            style.textContent = `\r\n                .short-id-container {\r\n                    background-image: url(${backgroundImage});\r\n                    background-size: cover;\r\n                    height: 100vh;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                    font-family: 'Arial Rounded MT Bold', sans-serif;\r\n                }\r\n\r\n                .header {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    width: 100%;\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .players, .room-info {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                }\r\n\r\n                .share-code {\r\n                    font-size: 24px;\r\n                    margin-bottom: 10px;\r\n                    color: #333;\r\n                }\r\n\r\n                .room-id {\r\n                    font-size: 36px;\r\n                    margin-bottom: 10px;\r\n                    color: #007bff;\r\n                }\r\n\r\n                .share-with {\r\n                    font-size: 18px;\r\n                    margin-bottom: 30px;\r\n                    color: #333;\r\n                }\r\n\r\n                .moves {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    margin-top: 30px;\r\n                }\r\n\r\n                .moves img {\r\n                    width: 80px;\r\n                    height: 80px;\r\n                    margin: 0 10px;\r\n                }\r\n\r\n                @media (min-width: 768px) {\r\n                    .moves img {\r\n                        width: 120px;\r\n                        height: 120px;\r\n                    }\r\n                }\r\n            `;\r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define('short-id', ShortId);","type Play = \"piedra\" | \"papel\" | \"tijera\";\r\n\r\ntype GameData = {\r\n  player1Name: string;\r\n  player2Name: string;\r\n  player1Play: Play | null;\r\n  player2Play: Play | null;\r\n  statistics: {\r\n    [playerName: string]: {\r\n      wins: number;\r\n      losses: number;\r\n      draws: number;\r\n    };\r\n  };\r\n  gameOver: boolean;\r\n  readyForNextRound: boolean;\r\n};\r\n\r\ntype State = {\r\n  currentGame: {\r\n    data: GameData;\r\n    shortId: string | null;\r\n  };\r\n  listeners: ((currentState: State) => void)[]; // Definido correctamente como un array de funciones\r\n  getState: () => State;\r\n  setState: (newState: State) => void;\r\n  subscribe: (callback: (currentState: State) => void) => void;\r\n  setPlayerName: (name: string) => void;\r\n  createRoom: () => Promise<string>;\r\n  joinRoom: (roomId: string, playerName: string) => Promise<number>;\r\n  setMove: (roomId: string, playerNumber: number, move: Play) => Promise<void>;\r\n  resetGame: () => Promise<void>;\r\n  setRoomId: (roomId: string) => void;\r\n};\r\n\r\nconst state: State = {\r\n  currentGame: {\r\n    data: {\r\n      player1Name: \"\",\r\n      player2Name: \"\",\r\n      player1Play: null,\r\n      player2Play: null,\r\n      statistics: {\r\n        player1: { wins: 0, losses: 0, draws: 0 },\r\n        player2: { wins: 0, losses: 0, draws: 0 },\r\n      },\r\n      gameOver: false,\r\n      readyForNextRound: false,\r\n    },\r\n    shortId: null,\r\n  },\r\n  listeners: [], // Inicializado correctamente como un array vacío\r\n  getState() {\r\n    return this;\r\n  },\r\n  setRoomId(roomId: string) {\r\n    this.data.roomId = roomId;\r\n},\r\n  setState(newState: State) {\r\n    this.currentGame = newState.currentGame;\r\n    for (const cb of this.listeners) {\r\n      cb(newState); // Ejecuta cada función de los listeners\r\n    }\r\n  },\r\n  subscribe(callback: (currentState: State) => void) {\r\n    this.listeners.push(callback); // Añade la función al array de listeners\r\n  },\r\n  setPlayerName(name: string) {\r\n    const currentState = this.getState();\r\n    currentState.name = name;\r\n    this.setState(currentState);\r\n},\r\n  async createRoom() {\r\n    const response = await fetch(\"https://ppt-backend-three.vercel.app/api/rooms\", { // URL actualizada\r\n      method: \"POST\",\r\n    });\r\n    const data = await response.json();\r\n    const currentState = state.getState();\r\n    currentState.currentGame.shortId = data.roomId;\r\n    state.setState(currentState);\r\n    return data.roomId;\r\n  },\r\n  async joinRoom(roomId: string, playerName: string) {\r\n    const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${roomId}/join`, { // URL actualizada\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ playerName }),\r\n    });\r\n    const data = await response.json();\r\n    return data.playerNumber;\r\n  },\r\n  async setMove(roomId: string, playerNumber: number, move: Play) {\r\n    await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${roomId}/move`, { // URL actualizada\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ playerNumber, move }),\r\n    });\r\n  },\r\n  async resetGame() {\r\n    const currentState = this.getState();\r\n    const roomId = currentState.currentGame.shortId;\r\n    if (roomId) {\r\n      try {\r\n        const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${roomId}/reset`, { // URL actualizada\r\n          method: \"PUT\",\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error al reiniciar la sala: ${response.statusText}`);\r\n        }\r\n\r\n        // Restablecer los valores del estado local\r\n        currentState.currentGame.data = {\r\n          player1Name: \"\",\r\n          player2Name: \"\",\r\n          player1Play: null,\r\n          player2Play: null,\r\n          statistics: {\r\n            player1: { wins: 0, losses: 0, draws: 0 },\r\n            player2: { wins: 0, losses: 0, draws: 0 },\r\n          },\r\n          gameOver: false,\r\n          readyForNextRound: false,\r\n        };\r\n        this.setState(currentState);\r\n      } catch (error) {\r\n        console.error(\"Error al reiniciar la sala:\", error);\r\n        // Mostrar un mensaje de error al usuario\r\n        alert(\"Hubo un error al reiniciar la sala. Inténtalo de nuevo.\");\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport { state, Play };\r\n","module.exports = new __parcel__URL__(\"piedrapapelotijera.a2838792.jpg\").toString();","module.exports = new __parcel__URL__(\"piedra.2b6b2e59.png\").toString();","module.exports = new __parcel__URL__(\"tijera.4b8c96df.png\").toString();","module.exports = new __parcel__URL__(\"papel.7c3d639f.png\").toString();","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class InstructionsPage extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n    connectedCallback() {\r\n        const currentState = state.getState();\r\n        const roomId = currentState.currentGame.shortId;\r\n        if (!roomId) {\r\n            (window as any).goTo(\"/\");\r\n            return;\r\n        }\r\n\r\n        this.render();\r\n    }\r\n    render() {\r\n        if (this.shadow) {\r\n            this.shadow.innerHTML = `\r\n                <div class=\"instructions-container\">\r\n                    <h3>Presioná jugar y elegí: piedra, papel o tijera antes de que pasen los 3 segundos.</h3>\r\n                    <button class=\"button\" id=\"play-button\">Jugar</button>\r\n                </div>\r\n            `;\r\n            const playButton = this.shadow.querySelector('#play-button');\r\n            if (playButton) {\r\n                playButton.addEventListener('click', () => {\r\n                    (window as any).goTo('/play');\r\n                });\r\n            }\r\n\r\n            const style = document.createElement(\"style\");\r\n            style.textContent = `\r\n                @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\r\n\r\n                .instructions-container {\r\n                    background-image: url(${backgroundImage});\r\n                    background-size: cover;\r\n                    height: 100vh;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                    font-family: 'Odibee Sans', cursive;\r\n                }\r\n\r\n                h3 {\r\n                    font-size: 32px;\r\n                    margin-bottom: 30px;\r\n                    color: #333;\r\n                    padding: 0 20px;\r\n                }\r\n\r\n                .button {\r\n                    width: 322px;\r\n                    height: 87px;\r\n                    border: none;\r\n                    background-color: #2979FF;\r\n                    color: white;\r\n                    font-size: 24px;\r\n                    margin-top: 20px;\r\n                    border-radius: 6px;\r\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                    text-transform: uppercase;\r\n                    letter-spacing: 2px;\r\n                    font-weight: bold;\r\n                    border: 15px solid #1976D2;\r\n                    font-family: 'Odibee Sans', cursive;\r\n                }\r\n\r\n                .button:hover {\r\n                    background-color: #0056b3;\r\n                }\r\n\r\n                @media (min-width: 768px) {\r\n                    .instructions-container {\r\n                        padding: 40px;\r\n                    }\r\n\r\n                    h3 {\r\n                        font-size: 48px;\r\n                    }\r\n\r\n                    .button {\r\n                        width: 400px;\r\n                        height: 100px;\r\n                        font-size: 32px;\r\n                    }\r\n                }\r\n            `;\r\n            this.shadow.appendChild(style);\r\n        }\r\n    }\r\n}\r\ncustomElements.define('instructions-page', InstructionsPage);","import { state, Play } from \"../../state\";\r\nimport piedraImage from \"../../assets/piedra.png\";\r\nimport tijeraImage from \"../../assets/tijera.png\";\r\nimport papelImage from \"../../assets/papel.png\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class PlayPage extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    roomId: string | null = null;\r\n    playerNumber: 1 | 2 = 1;\r\n\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n\r\n    async connectedCallback() {\r\n        const currentState = state.getState();\r\n        this.roomId = currentState.currentGame.shortId;\r\n        const player1Name = currentState.currentGame.data.player1Name;\r\n        const player2Name = currentState.currentGame.data.player2Name;\r\n\r\n        if (player1Name) {\r\n            this.playerNumber = player2Name ? 2 : 1;\r\n        }\r\n\r\n        if (!this.roomId) {\r\n            (window as any).goTo(\"/\");\r\n            return;\r\n        }\r\n\r\n        this.render();\r\n        await this.waitForGameResult();\r\n    }\r\n\r\n    async waitForGameResult() {\r\n        return new Promise((resolve) => {\r\n            state.subscribe(async (currentState) => {\r\n                if (currentState.currentGame.data.gameOver) {\r\n                    resolve(true);\r\n                    (window as any).goTo(\"/result\");\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const shadowRoot = this.shadow;\r\n        if (shadowRoot) {\r\n            shadowRoot.innerHTML = `\r\n                <div class=\"play-container\">\r\n                    <h1>Elige tu jugada</h1>\r\n                    <div class=\"timer\">\r\n                        <span id=\"timer\">3</span>\r\n                    </div>\r\n                    <div class=\"moves\">\r\n                        <button id=\"piedra\"><img src=\"${piedraImage}\" alt=\"Piedra\"></button>\r\n                        <button id=\"papel\"><img src=\"${papelImage}\" alt=\"Papel\"></button>\r\n                        <button id=\"tijera\"><img src=\"${tijeraImage}\" alt=\"Tijera\"></button>\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            const moves = shadowRoot.querySelector(\".moves\") as HTMLElement | null;\r\n            const timerElement = shadowRoot.querySelector(\"#timer\") as HTMLElement;\r\n            const timerContainer = shadowRoot.querySelector(\".timer\") as HTMLElement;\r\n\r\n            let timeLeft = 3;\r\n            timerContainer.style.animation = `countdown ${timeLeft}s linear forwards`;\r\n\r\n            const timerInterval = setInterval(() => {\r\n                timeLeft--;\r\n                if (timerElement) {\r\n                    timerElement.textContent = timeLeft.toString();\r\n                }\r\n                if (timeLeft === 0) {\r\n                    clearInterval(timerInterval);\r\n                    if (moves) {\r\n                        moves.style.display = 'none';\r\n                    }\r\n                }\r\n            }, 1000);\r\n\r\n            moves?.addEventListener(\"click\", async (e) => {\r\n                const target = (e.target as HTMLElement).closest('button') as HTMLButtonElement;\r\n                if (target) {\r\n                    clearInterval(timerInterval);\r\n                    const buttons = shadowRoot.querySelectorAll(\".moves button\");\r\n                    buttons.forEach(button => {\r\n                        const img = button.querySelector('img');\r\n                        if (button === target) {\r\n                            img?.classList.add('selected');\r\n                        } else {\r\n                            img?.classList.add('unselected');\r\n                        }\r\n                    });\r\n\r\n                    const myMove = target.id as Play;\r\n                    if (this.roomId) {\r\n                        await state.setMove(this.roomId, this.playerNumber, myMove);\r\n                    } else {\r\n                        console.error(\"roomId es null. No se puede realizar el movimiento.\");\r\n                    }\r\n                }\r\n            });\r\n\r\n            const style = document.createElement(\"style\");\r\n            style.textContent = `\r\n                .play-container {\r\n                    background-image: url(${backgroundImage});\r\n                    background-size: cover;\r\n                    height: 100vh;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                }\r\n\r\n                h1 {\r\n                    font-size: 36px;\r\n                    margin-bottom: 30px;\r\n                    color: #333;\r\n                }\r\n\r\n                .timer {\r\n                    font-size: 48px;\r\n                    margin-bottom: 30px;\r\n                    color: #333;\r\n                    position: relative;\r\n                    width: 100px;\r\n                    height: 100px;\r\n                    border-radius: 50%;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    border: 5px solid #333;\r\n                }\r\n\r\n                .timer::before {\r\n                    content: \"\";\r\n                    position: absolute;\r\n                    top: -5px;\r\n                    left: -5px;\r\n                    right: -5px;\r\n                    bottom: -5px;\r\n                    border-radius: 50%;\r\n                    border: 5px solid transparent;\r\n                    border-top-color: #333;\r\n                    animation: spin 3s linear infinite;\r\n                }\r\n\r\n                @keyframes spin {\r\n                    0% {\r\n                        transform: rotate(0deg);\r\n                    }\r\n                    100% {\r\n                        transform: rotate(360deg);\r\n                    }\r\n                }\r\n\r\n                @keyframes countdown {\r\n                    0% {\r\n                        stroke-dasharray: 283;\r\n                        stroke-dashoffset: 0;\r\n                    }\r\n                    100% {\r\n                        stroke-dasharray: 283;\r\n                        stroke-dashoffset: 283;\r\n                    }\r\n                }\r\n\r\n                .moves {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                }\r\n\r\n                .moves button {\r\n                    background: none;\r\n                    border: none;\r\n                    padding: 10px;\r\n                    margin: 0 10px;\r\n                    cursor: pointer;\r\n                }\r\n\r\n                .moves img {\r\n                    width: 100px;\r\n                    height: 100px;\r\n                    transition: transform 0.3s ease;\r\n                }\r\n\r\n                .moves img.selected {\r\n                    transform: scale(1.2);\r\n                }\r\n\r\n                .moves img.unselected {\r\n                    opacity: 0.5;\r\n                }\r\n\r\n                @media (min-width: 768px) {\r\n                    h1 {\r\n                        font-size: 48px;\r\n                    }\r\n\r\n                    .moves img {\r\n                        width: 150px;\r\n                        height: 150px;\r\n                    }\r\n                }\r\n            `;\r\n            shadowRoot.appendChild(style);\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define('play-page', PlayPage);","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class TuNombre extends HTMLElement {\r\n    roomId: string | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'open' });\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.roomId = state.getState().currentGame.shortId; // Obtener el roomId del estado\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        if (!this.shadowRoot) {\r\n            return; // Salir si shadowRoot es null\r\n        }\r\n\r\n        this.shadowRoot.innerHTML = `\r\n            <div class=\"tu-nombre-container\">\r\n                <h2>Ingresa tu nombre</h2>\r\n                <form class=\"nombre-form\">\r\n                    <input type=\"text\" name=\"nombre\" placeholder=\"Tu nombre\">\r\n                    <button class=\"button\" type=\"submit\">Unirse a la sala</button>\r\n                </form>\r\n            </div>\r\n        `;\r\n\r\n        const form = this.shadowRoot.querySelector(\".nombre-form\") as HTMLFormElement;\r\n        form.addEventListener(\"submit\", async (e) => {\r\n            e.preventDefault();\r\n            const nombre = (form.nombre as any).value;\r\n            if (this.roomId) {\r\n                try {\r\n                    const response = await fetch(\r\n                        `https://ppt-backend-three.vercel.app/api/rooms/${this.roomId}/join`, // Usar el roomId del estado\r\n                        {\r\n                            method: \"PUT\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({ playerName: nombre }),\r\n                        }\r\n                    );\r\n\r\n                    if (!response.ok) {\r\n                        console.error(\"Error al unirse a la sala:\", response.statusText);\r\n                        alert(\"Hubo un error al unirse a la sala. Inténtalo de nuevo.\");\r\n                        return; // Detener la ejecución si hay un error\r\n                    }\r\n\r\n                    const data = await response.json();\r\n                    const playerNumber = data.playerNumber;\r\n\r\n                    state.setPlayerName(nombre);\r\n\r\n                    if (playerNumber === 1) {\r\n                        (window as any).goTo(`/short-id/${this.roomId}`);\r\n                    } else {\r\n                        (window as any).goTo(\"/instructions\");\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error al unirse a la sala:\", error);\r\n                    alert(\"Hubo un error al unirse a la sala. Inténtalo de nuevo.\");\r\n                }\r\n            }\r\n        });\r\n\r\n        const style = document.createElement(\"style\");\r\n        style.textContent = `\r\n            @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\r\n\r\n            .tu-nombre-container {\r\n                background-image: url(${backgroundImage});\r\n                background-size: cover;\r\n                height: 100vh;\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                justify-content: center;\r\n                padding: 20px;\r\n                text-align: center;\r\n                font-family: 'Odibee Sans', cursive;\r\n            }\r\n\r\n            h2 {\r\n                font-size: 36px;\r\n                margin-bottom: 30px;\r\n                color: #333;\r\n            }\r\n\r\n            .nombre-form {\r\n                display: flex;\r\n                flex-direction: column;\r\n                width: 80%;\r\n                max-width: 400px;\r\n            }\r\n\r\n            input[type=\"text\"] {\r\n                padding: 15px;\r\n                margin-bottom: 20px;\r\n                border: 1px solid #ccc;\r\n                border-radius: 5px;\r\n                font-size: 16px;\r\n            }\r\n\r\n            .button {\r\n                width: 322px;\r\n                height: 87px;\r\n                border: none;\r\n                background-color: #2979FF;\r\n                color: white;\r\n                font-size: 24px;\r\n                margin-top: 20px;\r\n                border-radius: 6px;\r\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                text-transform: uppercase;\r\n                letter-spacing: 2px;\r\n                font-weight: bold;\r\n                border: 15px solid #1976D2;\r\n                font-family: 'Odibee Sans', cursive;\r\n            }\r\n\r\n            .button:hover {\r\n                background-color: #0056b3;\r\n            }\r\n\r\n            @media (min-width: 768px) {\r\n                h2 {\r\n                    font-size: 48px;\r\n                }\r\n\r\n                .nombre-form {\r\n                    width: 60%;\r\n                }\r\n\r\n                input[type=\"text\"] {\r\n                    font-size: 20px;\r\n                }\r\n\r\n                .button {\r\n                    width: 400px;\r\n                    height: 100px;\r\n                    font-size: 32px;\r\n                }\r\n            }\r\n        `;\r\n        this.shadowRoot.appendChild(style);\r\n    }\r\n}\r\n\r\ncustomElements.define(\"tu-nombre\", TuNombre);","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class ResultPage extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    roomId: string | null = null;\r\n\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n\r\n    setRoomId(roomId: string) {\r\n        this.roomId = roomId;\r\n    }\r\n\r\n    async connectedCallback() {\r\n        if (!this.roomId) {\r\n            const currentState = state.getState();\r\n            this.roomId = currentState.currentGame.shortId;\r\n        }\r\n\r\n        if (!this.roomId) {\r\n            (window as any).goTo(\"/\");\r\n            return;\r\n        }\r\n\r\n        const gameResult = await this.getGameResult();\r\n        this.render(gameResult);\r\n    }\r\n\r\n    async getGameResult() {\r\n        try {\r\n            const response = await fetch(`https://ppt-backend-three.vercel.app/api/rooms/${this.roomId}`);\r\n            if (!response.ok) {\r\n                throw new Error(`Error al obtener los resultados del juego: ${response.statusText}`);\r\n            }\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.error(\"Error al obtener los resultados del juego:\", error);\r\n            alert(\"Hubo un error al obtener los resultados del juego. Inténtalo de nuevo.\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render(gameResult: any) {\r\n        const shadowRoot = this.shadow;\r\n        if (!gameResult) {\r\n            return;\r\n        }\r\n\r\n        const { player1Name, player2Name, player1Play, player2Play, statistics } = gameResult;\r\n\r\n        let message = \"Es un empate.\";\r\n        let starColor = \"yellow\";\r\n\r\n        if (player1Play === player2Play) {\r\n            message = \"Es un empate.\";\r\n            starColor = \"yellow\";\r\n        } else if (\r\n            (player1Play === \"piedra\" && player2Play === \"tijera\") ||\r\n            (player1Play === \"tijera\" && player2Play === \"papel\") ||\r\n            (player1Play === \"papel\" && player2Play === \"piedra\")\r\n        ) {\r\n            message = \"¡Ganaste!\";\r\n            starColor = \"green\";\r\n        } else {\r\n            message = \"Perdiste.\";\r\n            starColor = \"red\";\r\n        }\r\n\r\n        if (shadowRoot) {\r\n            shadowRoot.innerHTML = `\r\n                <div class=\"result-container\">\r\n                    <div class=\"star\"></div>\r\n                    <h1>${message}</h1>\r\n                    <h2>Resultados</h2>\r\n                    <p>${player1Name} jugó: ${player1Play}</p>\r\n                    <p>${player2Name} jugó: ${player2Play}</p>\r\n                    <p>Victorias de ${player1Name}: ${statistics[player1Name].wins}</p>\r\n                    <p>Derrotas de ${player1Name}: ${statistics[player1Name].losses}</p>\r\n                    <p>Empates de ${player1Name}: ${statistics[player1Name].draws}</p>\r\n                    <p>Victorias de ${player2Name}: ${statistics[player2Name].wins}</p>\r\n                    <p>Derrotas de ${player2Name}: ${statistics[player2Name].losses}</p>\r\n                    <p>Empates de ${player2Name}: ${statistics[player2Name].draws}</p>\r\n                    <button class=\"button\" id=\"play-again-button\">Volver a jugar</button>\r\n                </div>\r\n            `;\r\n\r\n            const playAgainButton = shadowRoot.querySelector(\"#play-again-button\");\r\n            if (playAgainButton) {\r\n                playAgainButton.addEventListener(\"click\", () => {\r\n                    state.resetGame();\r\n                    (window as any).goTo(\"/play\");\r\n                });\r\n            }\r\n\r\n            const style = document.createElement(\"style\");\r\n            style.textContent = `\r\n                @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\r\n\r\n                .result-container {\r\n                    background-image: url(${backgroundImage});\r\n                    background-size: cover;\r\n                    height: 100vh;\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    padding: 20px;\r\n                    text-align: center;\r\n                    font-family: 'Odibee Sans', cursive;\r\n                }\r\n\r\n                h1 {\r\n                    font-size: 48px;\r\n                    margin-bottom: 20px;\r\n                    color: #333;\r\n                }\r\n\r\n                h2 {\r\n                    font-size: 36px;\r\n                    margin-bottom: 30px;\r\n                    color: #333;\r\n                }\r\n\r\n                p {\r\n                    font-size: 24px;\r\n                    margin-bottom: 10px;\r\n                    color: #333;\r\n                }\r\n\r\n                .button {\r\n                    width: 322px;\r\n                    height: 87px;\r\n                    border: none;\r\n                    background-color: #2979FF;\r\n                    color: white;\r\n                    font-size: 24px;\r\n                    margin-top: 20px;\r\n                    border-radius: 6px;\r\n                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                    text-transform: uppercase;\r\n                    letter-spacing: 2px;\r\n                    font-weight: bold;\r\n                    border: 15px solid #1976D2;\r\n                    font-family: 'Odibee Sans', cursive;\r\n                }\r\n\r\n                .button:hover {\r\n                    background-color: #0056b3;\r\n                }\r\n\r\n                @media (min-width: 768px) {\r\n                    .result-container {\r\n                        padding: 40px;\r\n                    }\r\n\r\n                    h1 {\r\n                        font-size: 64px;\r\n                    }\r\n\r\n                    h2 {\r\n                        font-size: 48px;\r\n                    }\r\n\r\n                    p {\r\n                        font-size: 32px;\r\n                    }\r\n\r\n                    .button {\r\n                        width: 400px;\r\n                        height: 100px;\r\n                        font-size: 32px;\r\n                    }\r\n                }\r\n            `;\r\n            shadowRoot.appendChild(style);\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define(\"result-page\", ResultPage);","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class Welcome extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n    render() {\r\n        if (this.shadow) {\r\n            this.shadow.innerHTML = `\r\n                <style>\r\n                    body {\r\n                        background-color: white;\r\n                    }\r\n                    .welcome-container {\r\n                        width: 375px;\r\n                        height: 667px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        background-image: url(${backgroundImage});\r\n                        background-size: cover;\r\n                        background-repeat: no-repeat;\r\n                    }\r\n                    .title-container {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        padding: 20px;\r\n                    }\r\n                    h1 {\r\n                        font-size: 36px;\r\n                        text-align: center;\r\n                        background: linear-gradient(to right, green, lightgreen);\r\n                        -webkit-background-clip: text;\r\n                        -webkit-text-fill-color: transparent;\r\n                        font-family: 'Arial Rounded MT Bold', sans-serif;\r\n                    }\r\n                    .button {\r\n                        width: 322px;\r\n                        height: 87px;\r\n                        border: none;\r\n                        background-color: #2979FF;\r\n                        color: white;\r\n                        font-size: 24px;\r\n                        margin-top: 20px;\r\n                        border-radius: 6px;\r\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                        text-transform: uppercase;\r\n                        letter-spacing: 2px;\r\n                        font-weight: bold;\r\n                        border: 15px solid #1976D2;\r\n                    }\r\n                    @media (min-width: 965px) {\r\n                        .welcome-container {\r\n                            width: 1280px;\r\n                            height: 720px;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n                        }\r\n                    }\r\n                </style>\r\n                <div class=\"welcome-container\">\r\n                    <div class=\"title-container\">\r\n                        <h1>Piedra</h1>\r\n                        <h1>Papel ó</h1>\r\n                        <h1>Tijera</h1>\r\n                    </div>\r\n                    <button class=\"button\" id=\"new-game-button\">Nuevo Juego</button>\r\n                    <button class=\"button\" id=\"join-room-button\">Ingresa a una sala</button>\r\n                </div>\r\n            `;\r\n            const newGameButton = this.shadow.querySelector('#new-game-button');\r\n            const joinRoomButton = this.shadow.querySelector('#join-room-button');\r\n            if (newGameButton) {\r\n                newGameButton.addEventListener('click', async () => {\r\n                    const roomId = await state.createRoom();\r\n                    (window as any).goTo(`/rooms/${roomId}/join`); // Corrección aquí\r\n                });\r\n            }\r\n            if (joinRoomButton) {\r\n                joinRoomButton.addEventListener('click', () => {\r\n                    (window as any).goTo('/ingresar-a-sala');\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\ncustomElements.define('welcome-page', Welcome);","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class IngresarAsala extends HTMLElement {\r\n    roomIdInput: HTMLInputElement;\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: 'open' });\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        this.shadowRoot.innerHTML = `\r\n            <div class=\"ingresar-asala-container\">\r\n                <h2>Ingresa el código de la sala</h2>\r\n                <form class=\"sala-form\">\r\n                    <input type=\"text\" name=\"roomId\" placeholder=\"Código de la sala\">\r\n                    <button class=\"button\" type=\"submit\">Ingresar</button>\r\n                </form>\r\n            </div>\r\n        `;\r\n\r\n        const form = this.shadowRoot.querySelector(\".sala-form\") as HTMLFormElement;\r\n        this.roomIdInput = this.shadowRoot.querySelector(\"input[name='roomId']\") as HTMLInputElement;\r\n\r\n        form.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault();\r\n            this.ingresarASala();\r\n        });\r\n\r\n        const style = document.createElement(\"style\");\r\n        style.textContent = `\r\n            @import url('https://fonts.googleapis.com/css2?family=Odibee+Sans&display=swap');\r\n\r\n            .ingresar-asala-container {\r\n                background-image: url(${backgroundImage});\r\n                background-size: cover;\r\n                height: 100vh;\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                justify-content: center;\r\n                padding: 20px;\r\n                text-align: center;\r\n                font-family: 'Odibee Sans', cursive;\r\n            }\r\n\r\n            h2 {\r\n                font-size: 36px;\r\n                margin-bottom: 30px;\r\n                color: #333;\r\n            }\r\n\r\n            .sala-form {\r\n                display: flex;\r\n                flex-direction: column;\r\n                width: 80%;\r\n                max-width: 400px;\r\n            }\r\n\r\n            input[type=\"text\"] {\r\n                padding: 15px;\r\n                margin-bottom: 20px;\r\n                border: 1px solid #ccc;\r\n                border-radius: 5px;\r\n                font-size: 16px;\r\n            }\r\n\r\n            .button {\r\n                width: 322px;\r\n                height: 87px;\r\n                border: none;\r\n                background-color: #2979FF;\r\n                color: white;\r\n                font-size: 24px;\r\n                margin-top: 20px;\r\n                border-radius: 6px;\r\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                text-transform: uppercase;\r\n                letter-spacing: 2px;\r\n                font-weight: bold;\r\n                border: 15px solid #1976D2;\r\n                font-family: 'Odibee Sans', cursive;\r\n            }\r\n\r\n            .button:hover {\r\n                background-color: #0056b3;\r\n            }\r\n\r\n            @media (min-width: 768px) {\r\n                h2 {\r\n                    font-size: 48px;\r\n                }\r\n\r\n                .sala-form {\r\n                    width: 60%;\r\n                }\r\n\r\n                input[type=\"text\"] {\r\n                    font-size: 20px;\r\n                }\r\n\r\n                .button {\r\n                    width: 400px;\r\n                    height: 100px;\r\n                    font-size: 32px;\r\n                }\r\n            }\r\n        `;\r\n        this.shadowRoot.appendChild(style);\r\n    }\r\n\r\n    ingresarASala() {\r\n        const roomId = this.roomIdInput.value;\r\n        state.setRoomId(roomId); // Almacenar el roomId en el estado\r\n        (window as any).goTo('/ingresar-nombre');\r\n    }\r\n}\r\n\r\ncustomElements.define(\"ingresar-asala\", IngresarAsala);"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$abe438f9de09fed7$export$ca000e230c0caa3e","currentGame","data","player1Name","player2Name","player1Play","player2Play","statistics","player1","wins","losses","draws","player2","gameOver","readyForNextRound","shortId","listeners","getState","setRoomId","roomId","setState","newState","cb","subscribe","callback","push","setPlayerName","name","currentState","createRoom","response","fetch","method","json","joinRoom","playerName","headers","body","stringify","playerNumber","setMove","move","resetGame","ok","statusText","error","console","alert","$9d6d8b031b90d431$exports","$2d5bedd08863dc7b$exports","$af7abf9125591478$exports","$92c8478e4590eb86$exports","$a956b1c3d277d5bd$export$e37f6cf04f0d396a","HTMLElement","constructor","shadow","attachShadow","mode","connectedCallback","pathSegments","window","location","pathname","split","log","goTo","waitForBothPlayers","render","Promise","resolve","intervalId","setInterval","roomData","ownerName","guestName","clearInterval","setTimeout","innerHTML","style","document","createElement","textContent","appendChild","customElements","define","$63de42a99e12e9d4$export$34553d2d18504c80","playButton","querySelector","addEventListener","$759aea41f4359c5b$export$f3065aba99394728","waitForGameResult","shadowRoot","moves","timerElement","timerContainer","timeLeft","animation","timerInterval","display","e","target","closest","buttons","querySelectorAll","forEach","button","img","classList","add","myMove","$94290132cdeb5e8a$export$ae14a01bd659aaa1","form","preventDefault","nombre","value","$ed5792c26601d641$export$2b06c2bd596f1e13","gameResult","getGameResult","message","playAgainButton","$4777be50762f4b0a$export$23191e4434a9e834","newGameButton","joinRoomButton","$9b0f76e966c00c55$export$df21316eba5ea45e","roomIdInput","ingresarASala","$10c9776e944038dd$var$routes","pathRegex","params","shortIdPage","$10c9776e944038dd$var$goTo","history","pushState","$10c9776e944038dd$var$renderPath","route","find","test","app","getElementById","rendered","exec","warn","$10c9776e944038dd$var$getCleanPathFromURL","fullPath","basePath","startsWith","replace"],"version":3,"file":"index.d23546c4.js.map"}